/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gravatar;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import util.MD5Util;

/**
 *
 * @author Christian
 */
public class ExibeImagem extends javax.swing.JFrame {

    /**
     * Creates new form ExibeImagem
     */
    private URL url;
    private ImageIcon imgIcon;

    public ExibeImagem() {
        initComponents();
        url = null;
        imgIcon = null;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu = new javax.swing.JPopupMenu();
        jMenuItemSalvar = new javax.swing.JMenuItem();
        jPanelImg = new javax.swing.JPanel();
        jLabelConteudoImagem = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jTextFieldTamanhoImagem = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jLabelEmail = new javax.swing.JLabel();
        jLabelTamanhoImagem = new javax.swing.JLabel();

        jMenuItemSalvar.setText("Salvar Imagem");
        jMenuItemSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalvarActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItemSalvar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Exibe a Imagem do Gravatar");

        jLabelConteudoImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelConteudoImagem.setToolTipText("Clique com o botão direito do mouse para salvar a imagem");
        jLabelConteudoImagem.setFocusable(false);
        jLabelConteudoImagem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelConteudoImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelConteudoImagemMouseClicked(evt);
            }
        });

        jTextFieldEmail.setText("christian.ecomp@gmail.com");
        jTextFieldEmail.setToolTipText("E-mail");
        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });

        jTextFieldTamanhoImagem.setText("512");
        jTextFieldTamanhoImagem.setToolTipText("Tamanho da Imagem");
        jTextFieldTamanhoImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTamanhoImagemActionPerformed(evt);
            }
        });

        jButtonBuscar.setText("Buscar Imagem");
        jButtonBuscar.setToolTipText("Clique com o botão direito do mouse para salvar a imagem");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jLabelEmail.setText("E-mail:");

        jLabelTamanhoImagem.setText("Tamanho da Imagem:");

        javax.swing.GroupLayout jPanelImgLayout = new javax.swing.GroupLayout(jPanelImg);
        jPanelImg.setLayout(jPanelImgLayout);
        jPanelImgLayout.setHorizontalGroup(
            jPanelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelConteudoImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelImgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelTamanhoImagem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTamanhoImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelImgLayout.setVerticalGroup(
            jPanelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelImgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelTamanhoImagem)
                    .addComponent(jTextFieldTamanhoImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEmail)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelConteudoImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTamanhoImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTamanhoImagemActionPerformed
        jTextFieldTamanhoImagem.setText("");
    }//GEN-LAST:event_jTextFieldTamanhoImagemActionPerformed

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed
        jTextFieldEmail.setText("");
    }//GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        String email = this.jTextFieldEmail.getText().toLowerCase().trim();
        String size = this.jTextFieldTamanhoImagem.getText().trim();

        if (email.trim().equals("") || email == null) {
            JOptionPane.showMessageDialog(this, "Digite um email", "Email", JOptionPane.WARNING_MESSAGE);
            throw new IllegalArgumentException("Digite um email");

        }
        if (size.trim().equals("") || size == null) {
            JOptionPane.showMessageDialog(this, "Digite um tamanho de imagem válido. Ex.: 50,500,5000", "Tamanho da Imagem", JOptionPane.WARNING_MESSAGE);
            throw new IllegalArgumentException("Digite um tamanho de imagem válido. Ex.: 50,500,5000");

        }

        String hash = MD5Util.md5Hex(email);
        String URLParaPesquisar = "https://s.gravatar.com/avatar/" + hash + "?s=" + size;
        //System.out.println(URLParaPesquisar);

        try {
            url = new URL(URLParaPesquisar);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ExibeImagem.class.getName()).log(Level.SEVERE, null, ex);
        }
        imgIcon = new ImageIcon(url);
        jLabelConteudoImagem.setIcon(imgIcon);
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jMenuItemSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalvarActionPerformed
        if (imgIcon != null) {

            try {
                Image img = imgIcon.getImage();

                BufferedImage bi = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_4BYTE_ABGR);

                Graphics2D g2 = bi.createGraphics();
                g2.drawImage(img, 0, 0, null);
                g2.dispose();

                JFileChooser abrir = new JFileChooser();
                /**
                 * Obtem o nome do usuário do sistema
                 */
                String nomeUsuarioSistema = System.getProperty("user.name");
                File novoDiretorio = new File("C:" + File.separator + "Users" + File.separator + nomeUsuarioSistema + File.separator + "Desktop" + File.separator);
                if (!novoDiretorio.exists()) {
                    novoDiretorio = new File("D:" + File.separator + "Desktop" + File.separator);
                }
                if (!novoDiretorio.exists()) {
                    novoDiretorio = new File("E:" + File.separator + "Desktop" + File.separator);
                }
                //System.out.println("diretorio: " + novoDiretorio);
                abrir.setCurrentDirectory(novoDiretorio);
                /**
                 * Abre diretórios e arquivos
                 */
                //abrir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                abrir.setFileSelectionMode(JFileChooser.FILES_ONLY);
                
                String nomeImagem = this.jTextFieldEmail.getText().trim();
                // Obtém o nome da imagem até o arroba
                nomeImagem = nomeImagem.substring(0, nomeImagem.indexOf("@"));

                abrir.setSelectedFile(new File("Gravatar_" + nomeImagem + ".png"));
                int verificacao = abrir.showOpenDialog(this);
                if (verificacao == JFileChooser.APPROVE_OPTION) {
                    novoDiretorio = abrir.getSelectedFile();
                    String dir = null;
                    try {
                        dir = novoDiretorio.getCanonicalPath();
                    } catch (IOException ex) {
                        System.err.println("Salvando imagem  - " + ex.getMessage());
                        Logger.getLogger(ExibeImagem.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Path path;
                    if (!dir.contains(".png")) {
                        path = Paths.get(dir + ".png");
                    } else {
                        path = Paths.get(dir);
                    }
                    System.out.println("path: " + path);
                    ImageIO.write(bi, "png", new File(path.toString()));
                }
            } catch (IOException ex) {
                Logger.getLogger(ExibeImagem.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jMenuItemSalvarActionPerformed

    private void jLabelConteudoImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelConteudoImagemMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) { // Botão direito do mouse
            int x = this.getMousePosition().x;
            int y = this.getMousePosition().y;
            jPopupMenu.show(this, x, y);
        }
    }//GEN-LAST:event_jLabelConteudoImagemMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExibeImagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExibeImagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExibeImagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExibeImagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExibeImagem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JLabel jLabelConteudoImagem;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelTamanhoImagem;
    private javax.swing.JMenuItem jMenuItemSalvar;
    private javax.swing.JPanel jPanelImg;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldTamanhoImagem;
    // End of variables declaration//GEN-END:variables

}
